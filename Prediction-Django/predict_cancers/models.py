from django.db import models


class PredResults_cancers(models.Model):

    Patient_ID = models.IntegerField()
    Patient_Age = models.IntegerField()
    Patient_Gender = models.IntegerField()
    Patient_Name = models.CharField(max_length=255)
    consulted_doctor = models.IntegerField()
    Radius_Mean = models.FloatField()
    Texture_Mean = models.FloatField()
    Perimeter_Mean = models.FloatField()
    Area_Mean = models.FloatField()
    Smoothness_Mean = models.FloatField()
    Compactness_Mean = models.FloatField()
    Concavity_Mean = models.FloatField()
    Concave_Points_Mean = models.FloatField()
    Symmetry_Mean = models.FloatField()
    Fractal_Dimension_Mean = models.FloatField()
    Radius_Se = models.FloatField()
    Texture_Se = models.FloatField()
    Perimeter_Se = models.FloatField()
    Area_Se = models.FloatField()
    Smoothness_Se = models.FloatField()
    Compactness_Se = models.FloatField()
    Concavity_Se = models.FloatField()
    Concave_Points_Se = models.FloatField()
    Symmetry_Se = models.FloatField()
    Fractal_Dimension_Se = models.FloatField()
    Radius_Worst = models.FloatField()
    Texture_Worst = models.FloatField()
    Perimeter_Worst = models.FloatField()
    Area_Worst = models.FloatField()
    Smoothness_Worst = models.FloatField()
    Compactness_Worst = models.FloatField()
    Concavity_Worst = models.FloatField()
    Concave_Points_Worst = models.FloatField()
    Symmetry_Worst = models.FloatField()
    Fractal_Dimension_Worst = models.FloatField()
    Cancer_Disease = models.CharField(max_length=30)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.Cancer_Disease
